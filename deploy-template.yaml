AWSTemplateFormatVersion: '2010-09-09'
Description: 'BankIQ+ - Advanced Banking Analytics Platform with React Frontend and Flask Backend'

Parameters:
  YourIPAddress:
    Type: String
    Description: Your public IP address (get from whatismyip.com)
    AllowedPattern: '^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$'
    ConstraintDescription: Must be a valid IP address (e.g., 203.0.113.25)
    
Resources:
  # Security Group
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for BankIQ+ application - restricted to your IP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '${YourIPAddress}/32'
          Description: HTTP access from your IP only
      Tags:
        - Key: Name
          Value: BankIQ-SG

  # IAM Role for EC2 to access Bedrock
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonBedrockFullAccess
      Tags:
        - Key: Name
          Value: BankIQ-EC2Role

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role

  # EC2 Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c02fb55956c7d316  # Amazon Linux 2023
      InstanceType: t3.medium
      SecurityGroupIds:
        - !Ref SecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          
          # Install Node.js 18
          curl -fsSL https://rpm.nodesource.com/setup_18.x | bash -
          yum install -y nodejs
          
          # Install Python 3.11 and pip
          yum install -y python3.11 python3.11-pip git gcc python3.11-devel
          
          # Install serve globally for frontend
          npm install -g serve
          
          # Create app directory
          mkdir -p /opt/bankiq
          cd /opt/bankiq
          
          # Clone repository
          git clone https://github.com/AWS-Samples-GenAI-FSI/peer-bank-analytics.git .
          cd current-repo
          
          # Setup backend
          cd backend
          python3.11 -m pip install --upgrade pip
          python3.11 -m pip install -r requirements.txt
          
          # Setup frontend
          cd ../frontend
          npm install --production
          npm run build
          
          # Create logs directory
          mkdir -p /var/log/bankiq
          
          # Create systemd services
          cat > /etc/systemd/system/bankiq-backend.service << EOF
          [Unit]
          Description=BankIQ Backend
          After=network.target
          
          [Service]
          Type=simple
          User=ec2-user
          WorkingDirectory=/opt/bankiq/current-repo/backend
          ExecStart=/usr/bin/python3.11 app.py
          Restart=always
          Environment=FLASK_ENV=production
          Environment=AWS_DEFAULT_REGION=${AWS::Region}
          StandardOutput=append:/var/log/bankiq/backend.log
          StandardError=append:/var/log/bankiq/backend.log
          
          [Install]
          WantedBy=multi-user.target
          EOF
          
          cat > /etc/systemd/system/bankiq-frontend.service << EOF
          [Unit]
          Description=BankIQ Frontend
          After=network.target
          
          [Service]
          Type=simple
          User=ec2-user
          WorkingDirectory=/opt/bankiq/current-repo/frontend
          ExecStart=/usr/bin/serve -s build -l 3000
          Restart=always
          StandardOutput=append:/var/log/bankiq/frontend.log
          StandardError=append:/var/log/bankiq/frontend.log
          
          [Install]
          WantedBy=multi-user.target
          EOF
          
          # Set permissions
          chown -R ec2-user:ec2-user /opt/bankiq
          chown -R ec2-user:ec2-user /var/log/bankiq
          
          # Wait for services to be ready
          sleep 10
          
          # Enable and start services
          systemctl daemon-reload
          systemctl enable bankiq-backend
          systemctl enable bankiq-frontend
          systemctl start bankiq-backend
          systemctl start bankiq-frontend
          
          # Install nginx for reverse proxy
          yum install -y nginx
          
          cat > /etc/nginx/conf.d/bankiq.conf << EOF
          server {
              listen 80;
              server_name _;
              
              location / {
                  proxy_pass http://localhost:3000;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
              }
              
              location /api/ {
                  proxy_pass http://localhost:8001;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
              }
          }
          EOF
          
          systemctl enable nginx
          systemctl start nginx

      Tags:
        - Key: Name
          Value: BankIQ-Server

Outputs:
  ApplicationURL:
    Description: URL to access the BankIQ+ application
    Value: !Sub 'http://${EC2Instance.PublicDnsName}'
    

  InstanceId:
    Description: EC2 Instance ID
    Value: !Ref EC2Instance